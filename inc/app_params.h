/**
  ***************************************************************************************
  * @file    app_params.h
  * @author  £ukasz Kaümierczak
  * @version V1.2
  * @date    25/07/2013
  * @brief   This header file provides parameters extracting operations set
  ***************************************************************************************
  * @copy
  *
  * Autor:  £ukasz Kaümierczak, 2013 POLSKA
  * E-mail: lukasz.kazmierczak.biz@o2.pl
  * Prawa autorskie © 2013 £ukasz Kaümierczak. Wszystkie prawa zastrzeøone.
  * 
  * To Oprogramowanie zamieszczone w ürÛd≥ach internetowych lub innych zasobach podlega
  * ochronie praw autorskich. Wszelkie dzia≥ania zwiπzane z rozpowszechnianiem, modyfikowaniem,
  * publikowaniem rozwiπzaÒ zamieszczonych w Kodzie èrÛd≥owym wymaga uzgodnienia z autorem.
  *
  * AUTOR PREZENTOWANYCH ROZWI•ZA— NIE PONOSI ODPOWIEDZIALNOåCI ZA WSZELKIEGO RODZAJU
  * SZKODY(W TYM TAKØE OBOWI•ZKI ZWI•ZANE Z ICH LIKWIDACJ•) SPOWODOWANE UØYWANIEM LUB
  * MAJ•CE ZWI•ZEK Z UØYWANIEM OPROGRAMOWANIA. DOTYCZY TO R”WNIEØ PRZYPADKU GDY OSTRZEØENIE
  * LUB UWAGA O MOØLIWOåCI POJAWIENIA SI  SZKODY LUB PROBLEMU ZOSTA£O PRZEKAZANE.
  *
  * Author: £ukasz Kaümierczak, 2013 POLAND
  * E-mail: lukasz.kazmierczak.biz@o2.pl
  * Copyright © 2013 £ukasz Kaümierczak. All rights reserved.
  * 
  * This Software available in Internet sources or other resources is protected by copyrights.
  * All actions related to redistribution, modifying or publishing solutions included in 
  * the Source Code require permission of the Author.
  *
  * AUTHOR OF PRESENTED SOLUTIONS SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR ANY
  * TYPE OF DAMAGES(INCLUDING SERVICES OF LIQUIDATION OF THESE DAMAGES) ARISING IN
  * ANY WAY OF USE OF THIS SOFTWARE. THIS SHALL ALSO BE EFFECTIVE IF WARNING OR NOTICE
  * ABOUT POSSIBLE DAMAGE OR PROBLEM WAS COMMUNICATED.
  *
  * <h2><center>&copy; COPYRIGHT 2013 £ukasz Kaümierczak </center></h2>
*/
#ifndef APP_PARAMS_H
#define APP_PARAMS_H

#include "common.h"


class app_parameters {
public:
    static app_parameters &instance() { static app_parameters ainstance; return ainstance; }

    const std::string &getPipeName()   const { return pipeName; }
    const UINT getTextSize()           const { return textSize; }
    const UINT getTextRepositionTime() const { return textRepositionTime; }
    const UINT getTextUpdateTime()     const { return textUpdateTime; }

private:
    app_parameters(): pipeName(UNNAMED), textSize(10), textRepositionTime(1000), textUpdateTime(500) {}
    app_parameters(const app_parameters&);
    app_parameters &operator=(const app_parameters&);

    std::string pipeName;
    UINT textSize;
    UINT textRepositionTime;
    UINT textUpdateTime;

    friend FunctionSuccesFailure get_main_parameters(INT argc, CHAR *argv[]);
};

FunctionSuccesFailure get_main_parameters(INT argc, CHAR *argv[]);


#endif
